plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id "kotlin-kapt"
    id "androidx.navigation.safeargs.kotlin"
    id("kotlin-parcelize")
    id "kotlinx-serialization"
}
apply plugin: 'kotlin-android'


android {
    compileSdk 33

    defaultConfig {
        applicationId "com.fictivestudios.demoarcitectureapp"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    //dimens
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'


    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT"
    implementation "com.squareup.retrofit2:converter-gson:$GSON"
    implementation "com.squareup.okhttp3:okhttp:$OK_HTTP"
    implementation "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_INTERCEPTER"

    implementation 'com.google.code.gson:gson:2.9.1'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$COROUTINES"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$COROUTINES"

    //Kotlin CoRoutines
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$COROUTINES_ADAPTER"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$JET_BRAIN_COROUTINES"

    //multidex
    implementation "androidx.multidex:multidex:$multidex_version"


    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"

    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    implementation "com.google.android.material:material:1.6.1"

    //hilt
    implementation 'com.google.dagger:hilt-android:2.38.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.38.1'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    //jetpackdata store
    implementation "androidx.datastore:datastore-preferences:1.0.0"


    //Glid
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'


    //room
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")


    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"


}